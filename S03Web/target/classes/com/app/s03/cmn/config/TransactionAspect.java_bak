/**
 * Copyright APP. All Rights Reserved.
 *
 * @since 2024
 * @filename TransactionAspect.java
 */
package com.app.s03.cmn.config;

import java.util.ArrayList;
import java.util.List;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.aop.Advisor;
import org.springframework.aop.aspectj.AspectJExpressionPointcut;
import org.springframework.aop.support.DefaultPointcutAdvisor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.stereotype.Component;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource;
import org.springframework.transaction.interceptor.RollbackRuleAttribute;
import org.springframework.transaction.interceptor.RuleBasedTransactionAttribute;
import org.springframework.transaction.interceptor.TransactionAttributeSource;
import org.springframework.transaction.interceptor.TransactionInterceptor;

/**
 * <pre>
 * 패키지명: com.app.s03.cmn.config
 * 클래스명: TransactionAspect
 * 설명: 클래스에 대한 설명 작성해주세요.
 *
 * ==================================================================
 * 변경일자       변경자      변경내용
 * ------------------------------------------------------------------
 * 2024.02.01     hslee      1.0 최초작성
 * </pre>
 */
//@Configuration
//@EnableAspectJAutoProxy
public class TransactionAspect {
//    @Pointcut("execution(* APP.app.*..*Service.*(..))")
//    public void serviceMethods() {}
//
//    @Before("serviceMethods()")
//    public void beforeServiceMethods() {
//        // 메서드 실행 전에 수행할 작업 구현
//        // 예를 들어, 트랜잭션 시작 등의 로직을 추가할 수 있습니다.
//    }

}
